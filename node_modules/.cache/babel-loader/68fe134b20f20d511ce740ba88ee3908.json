{"ast":null,"code":"var _jsxFileName = \"/Users/gagekrumbach/Documents/solar-forecaster-web/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: []\n    };\n  }\n  /*\n    updateTable() {\n  \n  \n          date.innerHTML = day['observation_time'].value;\n          temp.innerHTML = (day['temp'][0]['min'].value + day['temp'][1]['max'].value) / 2;\n          forecast.innerHTML = day['weather_code'].value;\n      }\n      */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"forecastTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Temperature\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Forecast\"))));\n  }\n\n}\n\nfunction MapContainer(props) {\n  const marker = props.hasLocation ? /*#__PURE__*/React.createElement(Marker, {\n    position: props.latlng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }) : null;\n  console.log(\"function: \" + marker);\n  return /*#__PURE__*/React.createElement(Map, {\n    center: [34, -108],\n    zoom: 6,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), marker);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      this.setState({\n        'marker': {\n          hasLocation: true,\n          latlng: e.latlng\n        }\n      });\n      this.setState({\n        'forecast': setWeatherForecast(e.latlng.lat, e.latlng.lng)\n      });\n    };\n\n    this.state = {\n      'marker': {\n        'hasLocation': false,\n        'latlng': {\n          'lat': 34,\n          'lng': -108\n        }\n      },\n      'forecast': {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MapContainer, {\n      className: \"Map\",\n      onClick: e => this.handleClick(e),\n      marker: this.state.marker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Forecast, {\n      className: \"Forecast\",\n      forecast: this.state.forecast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App; // get weather forecast\n\nfunction setWeatherForecast(lat, long) {\n  const data = null;\n  const xhr = new XMLHttpRequest();\n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === this.DONE) {\n      return JSON.parse(this.responseText);\n    }\n  });\n  xhr.open(\"GET\", \"https://api.climacell.co/v3/weather/forecast/daily?lat=\" + lat + \"&lon=\" + long + \"&unit_system=us&start_time=now&fields=precipitation%2Cprecipitation_accumulation%2Ctemp%2Cwind_speed%2Cbaro_pressure%2Cvisibility%2Chumidity%2Cweather_code&apikey=9HaH9EKcMl4ANqi3eBna6kH58fybWmTu\");\n  xhr.send(data);\n}\n\nfunction f_to_c(t) {\n  return (t - 32) * (5 / 9);\n}\n\nfunction c_to_f(t) {\n  return t * (9 / 5) + 32;\n} // uses C degrees and percent\n\n\nfunction temp_hum_to_dew(temp, humidity) {\n  return Math.pow(humidity / 100, 0.125) * (112 + 0.9 * temp) + 0.1 * temp - 112;\n}","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/solar-forecaster-web/src/App.js"],"names":["React","Component","Map","TileLayer","Marker","Forecast","constructor","props","state","days","render","MapContainer","marker","hasLocation","latlng","console","log","onClick","App","handleClick","e","setState","setWeatherForecast","lat","lng","forecast","long","data","xhr","XMLHttpRequest","addEventListener","readyState","DONE","JSON","parse","responseText","open","send","f_to_c","t","c_to_f","temp_hum_to_dew","temp","humidity","Math","pow"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport { Map, TileLayer, Marker } from  \"react-leaflet\";\n\nclass Forecast extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          days: []\n      }\n  }\n/*\n  updateTable() {\n\n\n        date.innerHTML = day['observation_time'].value;\n        temp.innerHTML = (day['temp'][0]['min'].value + day['temp'][1]['max'].value) / 2;\n        forecast.innerHTML = day['weather_code'].value;\n    }\n    */\n\n  render() {\n    return (\n      <div>\n        <table id=\"forecastTable\">\n        <tr>\n          <th>Day</th>\n          <th>Temperature</th>\n          <th>Forecast</th>\n        </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction MapContainer (props) {\n    const marker = props.hasLocation ? (\n        <Marker position={props.latlng}/>\n    ) : null\n\n    console.log(\"function: \"+ marker)\n\n    return (\n        <Map\n            center={[34,-108]}\n            zoom={6}\n            onClick={props.onClick}\n        >\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {marker}\n        </Map>\n    );\n}\n\nclass App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            'marker': {\n                'hasLocation': false,\n                'latlng': {\n                    'lat': 34,\n                    'lng': -108,\n                }\n            },\n            'forecast': {}\n        };\n    }\n\n    handleClick = (e) => {\n        this.setState({'marker': {\n                hasLocation: true,\n                latlng: e.latlng\n            }\n        });\n\n        this.setState({'forecast': setWeatherForecast(e.latlng.lat, e.latlng.lng)});\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <MapContainer\n                    className=\"Map\"\n                    onClick={e => this.handleClick(e)}\n                    marker={this.state.marker}\n                />\n                <Forecast\n                    className=\"Forecast\"\n                    forecast={this.state.forecast}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n// get weather forecast\nfunction setWeatherForecast(lat, long) {\n    const data = null;\n\n    const xhr = new XMLHttpRequest();\n\n    xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === this.DONE) {\n            return JSON.parse(this.responseText);\n        }\n    });\n\n    xhr.open(\"GET\", \"https://api.climacell.co/v3/weather/forecast/daily?lat=\" + lat + \"&lon=\" + long + \"&unit_system=us&start_time=now&fields=precipitation%2Cprecipitation_accumulation%2Ctemp%2Cwind_speed%2Cbaro_pressure%2Cvisibility%2Chumidity%2Cweather_code&apikey=9HaH9EKcMl4ANqi3eBna6kH58fybWmTu\");\n    xhr.send(data);\n}\n\nfunction f_to_c(t) {\n    return (t - 32) * (5/9);\n}\n\nfunction c_to_f(t) {\n    return (t * (9/5)) + 32;\n}\n\n// uses C degrees and percent\nfunction temp_hum_to_dew(temp, humidity) {\n    return (Math.pow((humidity/100), 0.125) * (112 + (0.9 * temp)))\n        + (0.1 * temp)\n        - 112;\n}\n"]},"metadata":{},"sourceType":"module"}