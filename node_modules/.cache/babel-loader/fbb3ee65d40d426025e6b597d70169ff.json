{"ast":null,"code":"var _jsxFileName = \"/Users/gagekrumbach/Documents/solar-forecaster-web/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: []\n    };\n  }\n\n  updateTable() {\n    while (table.rows.length > 1) {\n      table.deleteRow(1);\n    }\n\n    day_forecast.forEach((day, i) => {\n      var row = table.insertRow(-1);\n      var date = row.insertCell(0);\n      var temp = row.insertCell(1);\n      var forecast = row.insertCell(2);\n      date.innerHTML = day['observation_time'].value;\n      temp.innerHTML = (day['temp'][0]['min'].value + day['temp'][1]['max'].value) / 2;\n      forecast.innerHTML = day['weather_code'].value;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"forecastTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Day\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Temperature\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Forecast\"))));\n  }\n\n}\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      this.setState({\n        hasLocation: true,\n        latlng: e.latlng\n      });\n    };\n\n    this.state = {\n      'hasLocation': false,\n      'latlng': {\n        'lat': 34,\n        'lng': -108\n      }\n    };\n  }\n\n  render() {\n    const marker = this.state.hasLocation ? /*#__PURE__*/React.createElement(Marker, {\n      position: this.state.latlng,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(Map, {\n      center: [34, -108],\n      zoom: 6,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), marker);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer, {\n    className: \"Map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Forecast, {\n    className: \"Forecast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;\n\nfunction f_to_c(t) {\n  return (t - 32) * (5 / 9);\n}\n\nfunction c_to_f(t) {\n  return t * (9 / 5) + 32;\n} // uses C degrees and percent\n\n\nfunction temp_hum_to_dew(temp, humidity) {\n  return Math.pow(humidity / 100, 0.125) * (112 + 0.9 * temp) + 0.1 * temp - 112;\n}","map":{"version":3,"sources":["/Users/gagekrumbach/Documents/solar-forecaster-web/src/App.js"],"names":["React","Component","Map","TileLayer","Marker","Forecast","constructor","props","state","days","updateTable","table","rows","length","deleteRow","day_forecast","forEach","day","i","row","insertRow","date","insertCell","temp","forecast","innerHTML","value","render","MapContainer","handleClick","e","setState","hasLocation","latlng","marker","App","f_to_c","t","c_to_f","temp_hum_to_dew","humidity","Math","pow"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport { Map, TileLayer, Marker } from  \"react-leaflet\";\n\nclass Forecast extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n          days: []\n      }\n  }\n\n  updateTable() {\n    while (table.rows.length > 1) {table.deleteRow(1);}\n\n    day_forecast.forEach((day, i) => {\n        var row = table.insertRow(-1);\n\n        var date = row.insertCell(0);\n        var temp = row.insertCell(1);\n        var forecast = row.insertCell(2);\n\n\n        date.innerHTML = day['observation_time'].value;\n        temp.innerHTML = (day['temp'][0]['min'].value + day['temp'][1]['max'].value) / 2;\n        forecast.innerHTML = day['weather_code'].value;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <table id=\"forecastTable\">\n        <tr>\n          <th>Day</th>\n          <th>Temperature</th>\n          <th>Forecast</th>\n        </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'hasLocation': false,\n            'latlng': {\n                'lat': 34,\n                'lng': -108,\n            }\n        };\n    }\n\n    handleClick = (e) => {\n        this.setState({\n            hasLocation: true,\n            latlng: e.latlng\n        })\n    }\n\n    render() {\n        const marker = this.state.hasLocation ? (\n            <Marker position={this.state.latlng}/>\n        ) : null\n\n        return (\n            <Map\n                center={[34,-108]}\n                zoom={6}\n                onClick={this.handleClick}\n            >\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {marker}\n            </Map>\n        );\n    }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapContainer className=\"Map\"/>\n      <Forecast className=\"Forecast\"/>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction f_to_c(t) {\n    return (t - 32) * (5/9);\n}\n\nfunction c_to_f(t) {\n    return (t * (9/5)) + 32;\n}\n\n// uses C degrees and percent\nfunction temp_hum_to_dew(temp, humidity) {\n    return (Math.pow((humidity/100), 0.125) * (112 + (0.9 * temp)))\n        + (0.1 * temp)\n        - 112;\n}\n"]},"metadata":{},"sourceType":"module"}